
R version 3.6.0 (2019-04-26) -- "Planting of a Tree"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "EMeth"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('EMeth')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("EMeth-package")
> ### * EMeth-package
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: EMeth-package
> ### Title: Cell type decomposition based on methylation data
> ### Aliases: EMeth-package EMeth
> 
> ### ** Examples
> 
> # Examples can be found in the "example" subdirectory.
> 
> 
> 
> cleanEx()
> nameEx("cv.emeth")
> ### * cv.emeth
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cv.emeth
> ### Title: cv.emeth: cross validation for emeth.
> ### Aliases: cv.emeth
> 
> ### ** Examples
> 
> ## See examples folder.
> 
> 
> 
> cleanEx()
> nameEx("emeth")
> ### * emeth
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: emeth
> ### Title: emeth: cell type decomposition from DNA methylation data based
> ###   on EM-type algorithm and penalized likelihood maximization.
> ### Aliases: emeth
> 
> ### ** Examples
> 
> ## See examples folder
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.083 0.007 0.09 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
